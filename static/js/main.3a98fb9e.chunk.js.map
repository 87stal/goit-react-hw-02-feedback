{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Sections.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","state","countPositiveFeedbackPercentage","countTotalFeedback","className","styles","fieldStatistic","good","neutral","bad","FeedbackOptions","onLeaveFeedback","type","button","onClick","Sections","title","children","section","Notification","message","App","handlerUpdateFeedback","setState","this","Math","round","Section","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,OAAS,kC,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,4B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,8LC4BbC,EAzBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,MACAC,EAFiB,EAEjBA,gCACAC,EAHiB,EAGjBA,mBAHiB,OAKjB,oCACE,uBAAGC,UAAWC,IAAOC,gBAArB,SAA4CL,EAAMM,MAClD,uBAAGH,UAAWC,IAAOC,gBAArB,YAA+CL,EAAMO,SACrD,uBAAGJ,UAAWC,IAAOC,gBAArB,QAA2CL,EAAMQ,KACjD,uBAAGL,UAAWC,IAAOC,gBAArB,UAA6CH,GAC7C,uBAAGC,UAAWC,IAAOC,gBAArB,qBAEGJ,EAFH,O,gBCkBWQ,EA5BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BACEC,KAAK,SACLR,UAAWC,IAAOQ,OAClBC,QAAS,kBAAMH,EAAgB,UAHjC,QAOA,4BACEC,KAAK,SACLR,UAAWC,IAAOQ,OAClBC,QAAS,kBAAMH,EAAgB,aAHjC,WAOA,4BACEC,KAAK,SACLR,UAAWC,IAAOQ,OAClBC,QAAS,kBAAMH,EAAgB,SAHjC,S,gBCJWI,EAZE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACf,6BAASb,UAAWC,IAAOa,SACzB,wBAAId,UAAU,SAASY,GACtBC,I,gBCKUE,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,uBAAGhB,UAAWC,IAAOe,SAAUA,IC6ChBC,E,4MA3CbpB,MAAQ,CACNM,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,sBAAwB,SAAAV,GACtB,EAAKW,UAAS,SAAAtB,GACZ,OAAO,eACJW,EAAOX,EAAMW,GAAQ,O,mEAM1B,OAAOY,KAAKvB,MAAMM,KAAOiB,KAAKvB,MAAMO,QAAUgB,KAAKvB,MAAMQ,M,wDAGzD,OAAOgB,KAAKC,MAAOF,KAAKvB,MAAMM,KAAOiB,KAAKrB,qBAAwB,O,+BAIlE,OACE,oCACE,kBAACwB,EAAD,CAASX,MAAO,yBACd,kBAAC,EAAD,CAAiBL,gBAAiBa,KAAKF,yBAEzC,kBAACK,EAAD,CAASX,MAAO,cACbQ,KAAKrB,qBAAuB,EAC3B,kBAAC,EAAD,CACEF,MAAOuB,KAAKvB,MACZE,mBAAoBqB,KAAKrB,qBACzBD,gCAAiCsB,KAAKtB,oCAGxC,kBAAC,EAAD,CAAckB,QAAQ,4B,GApChBQ,aCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3a98fb9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3FUZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sections_section__3TcA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__26v6U\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistic.module.css';\r\n\r\nconst Statistics = ({\r\n  state,\r\n  countPositiveFeedbackPercentage,\r\n  countTotalFeedback,\r\n}) => (\r\n  <>\r\n    <p className={styles.fieldStatistic}>Good: {state.good}</p>\r\n    <p className={styles.fieldStatistic}>Neutral: {state.neutral}</p>\r\n    <p className={styles.fieldStatistic}>Bad: {state.bad}</p>\r\n    <p className={styles.fieldStatistic}>Total: {countTotalFeedback}</p>\r\n    <p className={styles.fieldStatistic}>\r\n      Positive feedback:\r\n      {countPositiveFeedbackPercentage}%\r\n    </p>\r\n  </>\r\n);\r\nStatistics.propTypes = {\r\n  state: PropTypes.exact({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\r\n  countTotalFeedback: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('good')}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('neutral')}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      type=\"submit\"\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback('bad')}\r\n    >\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Sections.module.css'\r\n\r\nconst Sections = ({title, children}) => (\r\n  <section className={styles.section}>\r\n    <h2 className=\"Title\">{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSections.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children:  PropTypes.element,\r\n};\r\n\r\nexport default Sections;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notification = ({message}) => (\r\n<p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlerUpdateFeedback = type => {\n    this.setState(state => {\n      return {\n        [type]: state[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions onLeaveFeedback={this.handlerUpdateFeedback} />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              state={this.state}\n              countTotalFeedback={this.countTotalFeedback()}\n              countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}